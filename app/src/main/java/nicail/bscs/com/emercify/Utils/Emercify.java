package nicail.bscs.com.emercify.Utils;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.4.0.
 */
public class Emercify extends Contract {
    private static final String BINARY = "";

    public static final String FUNC__USERCOUNT = "_userCount";

    public static final String FUNC__EDITUSERNAME = "_editUsername";

    public static final String FUNC__EDITNAME = "_editName";

    public static final String FUNC__SETEMERGENCYPOST = "_setEmergencyPost";

    public static final String FUNC__GETUSER = "_getUser";

    public static final String FUNC__EDITUSER = "_editUser";

    public static final String FUNC_REPORTPOST = "reportPost";

    public static final String FUNC__SETUSER = "_setUser";

    protected Emercify(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Emercify(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public RemoteCall<BigInteger> _userCount() {
        final Function function = new Function(FUNC__USERCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> _editUsername(String _user_id, String _username) {
        final Function function = new Function(
                FUNC__EDITUSERNAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_user_id), 
                new org.web3j.abi.datatypes.Utf8String(_username)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> _editName(String _user_id, String _name) {
        final Function function = new Function(
                FUNC__EDITNAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_user_id), 
                new org.web3j.abi.datatypes.Utf8String(_name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> _setEmergencyPost(String _post_id, String _user_id, String _caption) {
        final Function function = new Function(
                FUNC__SETEMERGENCYPOST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_post_id), 
                new org.web3j.abi.datatypes.Utf8String(_user_id), 
                new org.web3j.abi.datatypes.Utf8String(_caption)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple5<String, String, String, String, Boolean>> _getUser(String _address) {
        final Function function = new Function(FUNC__GETUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}));
        return new RemoteCall<Tuple5<String, String, String, String, Boolean>>(
                new Callable<Tuple5<String, String, String, String, Boolean>>() {
                    @Override
                    public Tuple5<String, String, String, String, Boolean> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, Boolean>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (Boolean) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> _editUser(String _user_id, String _name, String _username, String _email) {
        final Function function = new Function(
                FUNC__EDITUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_user_id), 
                new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_username), 
                new org.web3j.abi.datatypes.Utf8String(_email)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> reportPost(String _post_id, String _user_id, Boolean isFake) {
        final Function function = new Function(
                FUNC_REPORTPOST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_post_id), 
                new org.web3j.abi.datatypes.Utf8String(_user_id), 
                new org.web3j.abi.datatypes.Bool(isFake)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> _setUser(String _user_id, String _name, String _username, String _email) {
        final Function function = new Function(
                FUNC__SETUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_user_id), 
                new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_username), 
                new org.web3j.abi.datatypes.Utf8String(_email)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static RemoteCall<Emercify> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Emercify.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<Emercify> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Emercify.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static Emercify load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Emercify(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static Emercify load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Emercify(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
